package jo.secondstep.contorllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import jo.secondstep.repositories.JobsRepository;
import jo.secondstep.tables.Job;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/jobs") // This means URL's start with /demo (after Application path)
public class JobsController {
	@Autowired
	// This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private JobsRepository jobsRepository;

	@PostMapping(path = "/add") // Map ONLY POST Requests
	public @ResponseBody String addNewJob(@RequestParam String title, Double min_salary, Double max_salary) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request

		Job job = new Job(title, min_salary, max_salary);
		jobsRepository.save(job);
		return "Job: " + job.getTitle() + " has been saved to database";

	}

	@GetMapping(path = "/all")
	public @ResponseBody String getAllJobs() {
		StringBuilder result = new StringBuilder();

		for (Job j : jobsRepository.findAll())
			result.append(j + "<br>");
		return result.toString();
	}

	@DeleteMapping(path = "/delete/{id}")
	public @ResponseBody String deleteJob(@PathVariable(value = "id") Integer id) {

		Job job = jobsRepository.findById(id).orElseGet(null);

		if (job != null) {
			jobsRepository.delete(job);
			return "Job: " + job.getId() + " has been deleted from database";
		}

		return "Error: There is no job with the id " + id;

	}


}